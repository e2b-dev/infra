// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/ww5vR9GNwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
