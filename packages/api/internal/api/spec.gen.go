// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
