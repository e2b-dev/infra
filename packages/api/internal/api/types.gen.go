// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package api

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	AccessTokenAuthScopes = "AccessTokenAuth.Scopes"
	ApiKeyAuthScopes      = "ApiKeyAuth.Scopes"
)

// Defines values for EnvironmentStatus.
const (
	EnvironmentStatusBuilding EnvironmentStatus = "building"
	EnvironmentStatusError    EnvironmentStatus = "error"
	EnvironmentStatusReady    EnvironmentStatus = "ready"
)

// Environment defines model for Environment.
type Environment struct {
	// BuildID Identifier of the build
	BuildID string `json:"buildID"`

	// EnvID Identifier of the environment
	EnvID string `json:"envID"`

	// Logs Build logs
	Logs []string `json:"logs"`

	// Public Whether the environment is public or only accessible by the team
	Public bool `json:"public"`

	// Status Status of the environment
	Status EnvironmentStatus `json:"status"`
}

// EnvironmentStatus Status of the environment
type EnvironmentStatus string

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error
	Message string `json:"message"`
}

// Instance defines model for Instance.
type Instance struct {
	// ClientID Identifier of the client
	ClientID string `json:"clientID"`

	// EnvID Identifier of the environment from which is the instance created
	EnvID string `json:"envID"`

	// InstanceID Identifier of the instance
	InstanceID string `json:"instanceID"`
}

// NewInstance defines model for NewInstance.
type NewInstance struct {
	// EnvID Identifier of the required environment
	EnvID string `json:"envID"`
}

// BuildID defines model for buildID.
type BuildID = string

// EnvID defines model for envID.
type EnvID = string

// InstanceID defines model for instanceID.
type InstanceID = string

// N400 defines model for 400.
type N400 = Error

// N401 defines model for 401.
type N401 = Error

// N404 defines model for 404.
type N404 = Error

// N500 defines model for 500.
type N500 = Error

// PostEnvsMultipartBody defines parameters for PostEnvs.
type PostEnvsMultipartBody struct {
	// BuildContext Docker build context
	BuildContext openapi_types.File `json:"buildContext"`

	// Dockerfile Dockerfile content
	Dockerfile string `json:"dockerfile"`

	// EnvID ID of the environment, only present if the environment should be rebuilt
	EnvID *string `json:"envID,omitempty"`
}

// GetEnvsEnvIDBuildsBuildIDParams defines parameters for GetEnvsEnvIDBuildsBuildID.
type GetEnvsEnvIDBuildsBuildIDParams struct {
	// LogsOffset Index of the starting build log that should be returned with the environment
	LogsOffset *int `form:"logsOffset,omitempty" json:"logsOffset,omitempty"`
}

// PostEnvsEnvIDBuildsBuildIDLogsJSONBody defines parameters for PostEnvsEnvIDBuildsBuildIDLogs.
type PostEnvsEnvIDBuildsBuildIDLogsJSONBody struct {
	// ApiSecret API secret
	ApiSecret string   `json:"apiSecret"`
	Logs      []string `json:"logs"`
}

// PostEnvsMultipartRequestBody defines body for PostEnvs for multipart/form-data ContentType.
type PostEnvsMultipartRequestBody PostEnvsMultipartBody

// PostEnvsEnvIDBuildsBuildIDLogsJSONRequestBody defines body for PostEnvsEnvIDBuildsBuildIDLogs for application/json ContentType.
type PostEnvsEnvIDBuildsBuildIDLogsJSONRequestBody PostEnvsEnvIDBuildsBuildIDLogsJSONBody

// PostInstancesJSONRequestBody defines body for PostInstances for application/json ContentType.
type PostInstancesJSONRequestBody = NewInstance
