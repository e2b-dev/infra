services:
  clickhouse:
    image: "clickhouse:25.4.5.24"
    environment:
      CLICKHOUSE_DB: clickhouse
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: '1'
      CLICKHOUSE_PASSWORD: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse:/var/lib/clickhouse

  grafana:
    image: grafana/grafana:12.0.0
    volumes:
      - ./packages/local-dev/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor metricsSummary
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app
    ports:
      - "53000:3000"

  loki:
    image: grafana/loki:3.4.1
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  memcached:
    image: memcached:1.6.38
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m # Set the maximum memory usage
      - MEMCACHED_THREADS=4 # Number of threads to use

  mimir:
    image: grafana/mimir:2.17.1
    command: -config.file=/etc/mimir/mimir.yaml
    volumes:
      - ./packages/local-dev/mimir.yaml:/etc/mimir/mimir.yaml

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.135.0
    volumes:
      - ./packages/local-dev/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver"

  postgres:
    image: postgres:17.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/17/docker
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/17/docker

  redis:
    image: redis:7.4.2
    ports:
      - "6379:6379"

  tempo:
    image: grafana/tempo:2.8.2
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./packages/local-dev/tempo.yaml:/etc/tempo.yaml
      - tempo:/var/tempo
    ports:
      - "3200"
    depends_on:
      - tempo-init
      - memcached

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  tempo-init:
    image: bash
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - tempo:/var/tempo

volumes:
  clickhouse: {}
  postgres: {}
  tempo: {}
