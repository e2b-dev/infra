// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
