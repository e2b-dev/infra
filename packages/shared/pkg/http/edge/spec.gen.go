// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"iv8GAAD//zO/EMSfOAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
