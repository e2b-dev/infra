// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xZW1Pbuhb+Kxqd82hIaDnnIW8QOi3TQjtAmTPD5EHYK7GKLbm6pGQY//czuvhuJ6Zc",
	"2t29nzC2tK7f+rS08oBDnmacAVMSzx6wAJlxJsH+czidmj8hZwqYMo8kyxIaEkU5m3yTnJl3MowhJebp",
	"3wKWeIb/NalkTtxXOXknBBc4z/MARyBDQTMjBM/wMYmQgO8apMJ5gA+nBy+v80irGJjyUhG4dUb54csr",
	"P+cKLblmkdH4n9cI8SWINYjCzTzw8myO54mWCsQ5j8D8mwmegVDUAYDxCE5PzFPbhQjQ6QkOsNpkgGdY",
	"KkHZyjgkQaxpCB+4VAP7MkHXRAGKuVSIRJEAKRFhEfJbUcaF2iL6lElFWNhr2KUXQf2a7UZeKiIUREc9",
	"ll7RFNCPGBhSMSATB/SDSCRgRU24IMIBXnKREoVnOCIK9hRNYbsupeWuFNay4TdUEq6s5NH77fJq9zUI",
	"SR2amp76D4gvrat++RZP/IY5T1PaE7lLrkUIKDQhW4+UnQfYUAA1cZ3dFLDry3jHnwGzenLcDGQ7MU3k",
	"LvKgXhmnbMmfszrGQHg3cnU2CrfSReD1AftqkLv+TWCmsw6sWkCqgtpKujKM6O0P3XqbPRxgYDo15sZA",
	"EhVvcIAjQSgzHgVYs+L1oid8bTro6J3XVCHl6qLQx0UYg1SCKC7M62gF25R8ri3vP01SUIKGJ1TenR1/",
	"lSYHbXOOUq6ZMnGIqLxDMiOGSbQQwFSyQVpChChDZ8d1MFOm/ntYJZsyBSuwx7lTeEHS3foujs6erOiS",
	"sOiW34O80Mym53X8u55nut+9c53egjDq1vMvX2VNE2VG2TgtP0Fzgicu5VRBOpZD6gC64Ik9vLxkIgTZ",
	"/NNd/BKyLpyumPBnG4Ndgl63C7AY6nYBDrqd2uqSSdDls0EiWPTTpEV5l5NJRm5pQtWmOBDaTNxP0ArS",
	"LDFYudU0iUD0krW7I3SoOfSE3bTELradXIsp3r4Z4CMpyWpI0M6Ee0WFFBM0H8m5AKJgThRJ+OrCXxY7",
	"TsA9hNpodLXb8b0er77yrqfGVKcA1044GxCVKEtIaPPcLQG3aECz/3pG7j8BW6m4q/uM3NNUpyjSwt1J",
	"KUMx10KO42ivwMLckMsuJjBrpCJp1klCK0hBI6p1P3u86rGjwiC//QahveL7pJ5AAk9P6rbAt1wb8qTP",
	"xitfTMemlj7xlbzwg5GuhQlf+Y5uSXSi8Oxm0ZlxGCnILgyqM7HjS/O0a1lvd5uaqHI3exh1SliGDrWg",
	"anNp8u/MPsroR9gcaYdGasyMgRjeCDAjBkL4f3tHX073PsKmkknsLjdkoP5WpKgyPIbfvTlG70yXGOB1",
	"cZrg6f7B/tRWXwaMZBTP8Nv96f4UBzgjKramTFwPax5X0HNyfLCfURhDeIetJFckp1H5ce6/NeZXb9xw",
	"pSnMI80euFKHIUi51InxKA8KSyYpCWPKYJRFaMkF8hvMZcudI4NGnnnRz2arEmS5pOF4W/0GlAl+v9lm",
	"6pWX/HRT1weTAi29NhrYlB2aWWlQ7Q72pnXXB/Yu3m/Rs0zR2tf+vnla6V+yQQKUFgwi18bVba+mmX36",
	"SgcmZlE1Cty+1iyqYiqLRmMSOhp1kTW8ap7aoStOU7fW8S92LANSHfNo82xR3MbxeZPalNCQj4FYI+zO",
	"y6hxQvsgIGBKbFz4p2PCP33BVFXci2c3Tda9WeSLAEudpkRs8Ay7YCEy4E+AFTEnzQ0u027Pg8xfhrZn",
	"27VQL5vt3jbtWbIdWsl/VLZdsB6Z7aLuHVPuRVSGfA1iMzHkIwfp9T2o+mQMlft2cK2/sp0Uy8+tlieS",
	"b9n/kCT5vLRxGsnHOF90u6SR7EySpDFYk78SBWVq23ncmeJJvT+vJ3xX6t6D+tzY+lxZfORkx+XxKVls",
	"RuC3qOWivngrwk/I80Nn6pFP7NzXXkB6519nRNxVYy5zVZWIM9eXEIlqU+MxdX5ilZkuXZAUFBi03Yyb",
	"iNnLhOnuq6tE3wyneSgENXC1LzCLRx8Y9kcPxJfO+9L1Fzwl/G/Hu9Ye/kZc0oexO5okwxD7SJOknFmO",
	"BJLZ84fgyAbn74mhYrooJ3a8KCcP9q+BTDEAGTiJOqOULhh6Eu2lPyq9gZf0XYPtoLyozkjryRKLYDxe",
	"WhNqpyyC+/JnSwM1ylbotpgWIRUThWTMdRKhW6iOwR9UxXZPYUhRLG3Pl0sJdspd2lROqaY9I92UMprq",
	"1H5sDxmHiudZLhDD47bRrUE9HFUI5V/vYnDV40RVomUdmtLMy/cPLYKslbCBXfGxvErki/z/AQAA//8d",
	"5jlU+yUAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
