// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
