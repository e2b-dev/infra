// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"GRSL4r8BAAD//wHf17gzPQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
