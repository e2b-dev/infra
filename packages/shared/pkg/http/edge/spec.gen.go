// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
