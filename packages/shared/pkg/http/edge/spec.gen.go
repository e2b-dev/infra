// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
