// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
