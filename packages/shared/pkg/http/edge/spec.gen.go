// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
