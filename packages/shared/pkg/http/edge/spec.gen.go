// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"OkK3o7dwebX/fwAAAP//SqgdKuYuAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
