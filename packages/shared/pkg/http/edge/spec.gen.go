// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
