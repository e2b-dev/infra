// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//xMRZJjsMAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
