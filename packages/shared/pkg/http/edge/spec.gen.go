// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"MdKu/Fhd/otF8XcAAAD//+CX7p41JAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
