// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"6dw7AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
