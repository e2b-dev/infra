// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+RbWW/cuhX+K4TahxaYZMb3un3wm5fg1sh1YtiOUSAwLjjimRGvJVLhYntq6L8XXLRT",
	"GnkZN0af7FhczvLxOzznMI9RzLOcM2BKRgePUY4FzkCBsP+SmJElf/iDEvMvAjIWNFeUs+gg+sboDw2I",
	"EmCKrigIxFdIJYD8pGgWUTMuxyqJZhHDGUQHzRVnkYAfmgog0YESGmaRjBPIsNlKbXI7WgnK1lFRFGaw",
	"zDmTYAXbXyzMj5gzBUyZX3GepzTGRrj5n9JI+NhY768CVtFB9Jd5re3cfZXzT0Jw4fZoa3iECTIiglRR",
	"MYv2F3u73/NQq8QY1K2KwI0zm+/vfvMvXKEV14yYHf/xFia+BHEHolSzKCFgfXycaqlAfOEELDIFz0Eo",
	"6gAQ8yyjqo/KS65FDCjmBNAdCGmM6HHJzEKzLrRmUcJlYCGzLcoFvcMKkBmCMCECpESYESRB3NEYUM6F",
	"Cq0ZOjCXfs7pSWiGke6UDMgRniIVFgrIYUD6K5oBuk+AVZqjeyyRgDU1NgVz+lZcZFhFBxHBCj4omsHA",
	"JkrLbQ5u+OrSTSjKtSZPvDLDi1nk3dZX6nqKP4smrXyPLM9429ZLz0r8+OkeBE2TVprfFLMmFE/Zik+H",
	"4/U0CL4dXHQ+CSzeDm+Bkrd1d2mEIfdeVop0vKEMD3hRYje+FAmYzszmCeBUJZtoFhGBKTPyzSLNyj/f",
	"BOzWhX9v3+PGVshjtdyPizgBqQRWXJg/kzWMbfK1MfyJpOqheF3Z8ycl0QyUoPEJlbdnR98kBOYfZlwz",
	"ZRxJqLxFMscmWmghgKl0g7QEgihDZ0dN6FOm/rlf70eZgjWIesMLnG3f7+Lw7MUbXbrbE8gLzSy+3ka/",
	"6+Nch9X7orOlu/ndHZ9/k42dKDObTdvlGWQmeOowSxVkU4mneQIueAp1kIqwEHjzHoLqIF1uPaRPpcrh",
	"kFiav4eP/oEInMlBMN+Eucp6qk+MOMdLmlK1KVm5S4dhllSQ5SlWcIYZNvALEaa7rgbokQQEsYPthbMD",
	"9l9/GThSUuL10EJb3eY3KlcxNvP28/YMyJ1SYMoncT1lY85WdL0Ni37xYze4MOYl5jxsm2fGSIWzvDpb",
	"T5xVH1G+/BNim4m1henpi1PqMgim0xQvDXpcftnTHWvFz7HhqdoyS85TwMx8XmIJVx4vjp+2rrjUNCWn",
	"YUsDu7vGLrHGhFDjdpyet0TvzenpDuyOHMYxSHnFb4ENbUSua57ofV9RAbHA8S2IsWGJXsM5Xrcka1jn",
	"FgSDdGyBDD94V/0ObK2SPubP8APNdIaIFi7hpQwlXAs5OTxhghV+kkkHfFibuMkYA64UhuDMlwlC+pLH",
	"wEqS4VwmXIVtrABnAxNVC5j9z1zh1LDuJf0PTJbVRPFJQzus1DFZS7r6UDRtUenWBVIQnm1MN6zWRGlf",
	"aa9Q6a8AIm9G6EUAVnDhC0A9lnkWAdYU/SSyfSZxNj1UV+XqxWoWn2AGV30bii5BFHZDVzlyZLffqVTD",
	"e8nyyjD55teJjb0LX9hKIMdktBFjEBdjEWD0zHZECZ6gEam+5eR14dqRZwwqZZA8MmJuOTdj9iFP5au3",
	"imSvHBIEYLI55lmG2UBUMGd0bMAW9t81jzdJt+RWT7WkSb+TqL2lbMc4W9HmMqNhynAyn/SvHqe9xoUd",
	"GkrXUr72JaEV1qmKDr7f9HoFZi6yA2c1Mw1d55rZ5mC5SctSsNIJjazGyuoqTPeYKvebtZwZZDOJUGZT",
	"uXOSQRr7TuSqkwolJ8100drFpCo1vTTBOZIrGxtBrAVVm0tDUc6phzn9DJtD7a6Uts2UACYg6kbTvz8c",
	"np9++Aybek1sZ7k2BPVlXEWVuQlGn345Qp/IGhqp8EG0+Lj3cWGPfw4M5zQ6iH79uPi4iGa2q2VFmbvy",
	"nvl1DYGiwb/sZxQnEN9GdiV30zUH13889t9aHa5fXPulvZgnVVt2kNpmASudGo2KWSnJXAm8WtF4kkRo",
	"xQXyE1Au+MNmTMYrv/LLRb3bm5ceCMpoXOEqLGaYgYmjirZo13u2Gh8W51UaV93Cf6iFVSmXbpAApQUD",
	"0pe9biCG9qsUmJtBdfdtfKwZVBu0dTnyVu3ay1yvqrqLhXHd7v3uT9IPDWJTH6ReSJjetb3ZoWdC98WA",
	"d8x3Q2e1cawjFlMcsdih02pas4ZvEtr3G2M4qbMMi02pgnD32FoPe3Ix61a9FDahqnWRLWZR7qvzXTi4",
	"q9pllRr4bvcRJ5vXdlT7Vli0I4gBUtEDy96uZBiGix+IYjuSvD+wOBURRgzuGy8xQrDo0sb8sX6cUThK",
	"TkFBCDcn9kuNmxCNvMq7jz6D7PeDhZOGoL8xjjxc/v7+POe0QHiL13rGDolRD5k3DG/2y7GKk5BLXfr4",
	"Vi7dGc20s+BJNBNAlFvlvSPKaWGCBDxQqRrh4zmMMM/LQvnLADgQimxR5d3Dr1Uaei767CLvHXxWCYS7",
	"F5ctyHM9zA+EypjfgdjMzT1aDqYJv4FyTw5977OatyVt8L3Sk3L4F7vLC2+rVdaP0/TravBoBFKLqLjp",
	"FyYnJho4TVvvUeT/0v2Va7t+3OriefMeO5bBdF33G6ivramv5cUnvidwfnyJF9sW+CkOcXm+eMfCL/Dz",
	"o/lh44l9JGXjSfDt0BkWty6NxhI1HlRNOcsnduleFBl6XRKILl7K10h3R/xvK58mPbV6VkrukOz9O+Jt",
	"Y/d/ImaoEXNL03QiYOpnd9MQ89ks/fMDRvuLafUg8v8TKmW9Wc5tsVk2QdH1dqA3taNKx0gXbHq9I9RW",
	"KF/jvu9qROm0us/iHV15c9jB80f7c3tlouUDl1JPyibK5Z90fmfhimkp/Cst1wy+u2cY4ospHW+9O+hd",
	"teT3ag2AbjZ02Qx0Gt8cTS9x/+sDtNMyZAQeqv/3ZVjKpHrLsheKVIIVkgnXKUFLqK+791Ql3Q5jSNCU",
	"r+UffLWSYF+fVoJVjdhF4MllRhnNdGY/9trdu2xJjPWlJ2cCTavUlpTv/gBWveAg6xfV3x+r+k4v/Bv8",
	"tYs/Jtu9Kf4bAAD//3SKAO/EOAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
