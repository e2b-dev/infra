// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_clusters_with_teams.sql

package queries

import (
	"context"
)

const getClustersWithTeams = `-- name: GetClustersWithTeams :many
SELECT t.id, t.created_at, t.is_blocked, t.name, t.tier, t.email, t.is_banned, t.blocked_reason, t.cluster_id, c.id, c.endpoint, c.token
FROM public.teams t
INNER JOIN public.clusters AS c ON t.cluster_id = c.id
`

type GetClustersWithTeamsRow struct {
	Team    Team
	Cluster Cluster
}

func (q *Queries) GetClustersWithTeams(ctx context.Context) ([]GetClustersWithTeamsRow, error) {
	rows, err := q.db.Query(ctx, getClustersWithTeams)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetClustersWithTeamsRow
	for rows.Next() {
		var i GetClustersWithTeamsRow
		if err := rows.Scan(
			&i.Team.ID,
			&i.Team.CreatedAt,
			&i.Team.IsBlocked,
			&i.Team.Name,
			&i.Team.Tier,
			&i.Team.Email,
			&i.Team.IsBanned,
			&i.Team.BlockedReason,
			&i.Team.ClusterID,
			&i.Cluster.ID,
			&i.Cluster.Endpoint,
			&i.Cluster.Token,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
