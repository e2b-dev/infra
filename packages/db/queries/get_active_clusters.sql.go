// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_active_clusters.sql

package queries

import (
	"context"
)

const getActiveClusters = `-- name: GetActiveClusters :many
SELECT DISTINCT c.id, c.endpoint, c.endpoint_tls, c.token
FROM public.clusters c
JOIN public.teams t ON t.cluster_id = c.id
`

type GetActiveClustersRow struct {
	Cluster Cluster
}

func (q *Queries) GetActiveClusters(ctx context.Context) ([]GetActiveClustersRow, error) {
	rows, err := q.db.Query(ctx, getActiveClusters)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetActiveClustersRow
	for rows.Next() {
		var i GetActiveClustersRow
		if err := rows.Scan(
			&i.Cluster.ID,
			&i.Cluster.Endpoint,
			&i.Cluster.EndpointTls,
			&i.Cluster.Token,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
