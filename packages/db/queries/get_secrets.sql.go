// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_secrets.sql

package queries

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const getTeamSecrets = `-- name: GetTeamSecrets :many
SELECT
    id,
    label,
    description,
    allowlist,
    created_at
FROM "public"."secrets"
WHERE team_id = $1
ORDER BY created_at DESC
`

type GetTeamSecretsRow struct {
	ID          uuid.UUID
	Label       string
	Description string
	Allowlist   []string
	CreatedAt   time.Time
}

func (q *Queries) GetTeamSecrets(ctx context.Context, teamID uuid.UUID) ([]GetTeamSecretsRow, error) {
	rows, err := q.db.Query(ctx, getTeamSecrets, teamID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetTeamSecretsRow
	for rows.Next() {
		var i GetTeamSecretsRow
		if err := rows.Scan(
			&i.ID,
			&i.Label,
			&i.Description,
			&i.Allowlist,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
