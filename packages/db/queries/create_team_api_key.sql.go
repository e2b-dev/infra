// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: create_team_api_key.sql

package queries

import (
	"context"

	"github.com/google/uuid"
)

const createTeamAPIKey = `-- name: CreateTeamAPIKey :one
INSERT INTO "public"."team_api_keys" (
    team_id,
    created_by,
    updated_at,
    api_key_hash,
    api_key_prefix,
    api_key_length,
    api_key_mask_prefix,
    api_key_mask_suffix,
    name,
    created_at
) VALUES (
    $1,
    $2,
    NOW(),
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    NOW()
) RETURNING created_at, team_id, updated_at, name, last_used, created_by, id, api_key_hash, api_key_prefix, api_key_length, api_key_mask_prefix, api_key_mask_suffix
`

type CreateTeamAPIKeyParams struct {
	TeamID           uuid.UUID
	CreatedBy        *uuid.UUID
	ApiKeyHash       string
	ApiKeyPrefix     string
	ApiKeyLength     int32
	ApiKeyMaskPrefix string
	ApiKeyMaskSuffix string
	Name             string
}

func (q *Queries) CreateTeamAPIKey(ctx context.Context, arg CreateTeamAPIKeyParams) (TeamApiKey, error) {
	row := q.db.QueryRow(ctx, createTeamAPIKey,
		arg.TeamID,
		arg.CreatedBy,
		arg.ApiKeyHash,
		arg.ApiKeyPrefix,
		arg.ApiKeyLength,
		arg.ApiKeyMaskPrefix,
		arg.ApiKeyMaskSuffix,
		arg.Name,
	)
	var i TeamApiKey
	err := row.Scan(
		&i.CreatedAt,
		&i.TeamID,
		&i.UpdatedAt,
		&i.Name,
		&i.LastUsed,
		&i.CreatedBy,
		&i.ID,
		&i.ApiKeyHash,
		&i.ApiKeyPrefix,
		&i.ApiKeyLength,
		&i.ApiKeyMaskPrefix,
		&i.ApiKeyMaskSuffix,
	)
	return i, err
}
