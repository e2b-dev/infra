// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: validate_build.sql

package queries

import (
	"context"
)

const existsWaitingTemplateBuild = `-- name: ExistsWaitingTemplateBuild :one
SELECT EXISTS (
    SELECT 1
    FROM envs e
             JOIN users_teams ut ON ut.team_id = e.team_id
             JOIN access_tokens at ON at.user_id = ut.user_id
             JOIN env_builds eb ON eb.env_id = e.id
    WHERE at.access_token_hash = $1
      AND e.id = $2
      AND eb.status = 'waiting'
) AS valid
`

type ExistsWaitingTemplateBuildParams struct {
	AccessTokenHash string
	TemplateID      string
}

func (q *Queries) ExistsWaitingTemplateBuild(ctx context.Context, arg ExistsWaitingTemplateBuildParams) (bool, error) {
	row := q.db.QueryRow(ctx, existsWaitingTemplateBuild, arg.AccessTokenHash, arg.TemplateID)
	var valid bool
	err := row.Scan(&valid)
	return valid, err
}
