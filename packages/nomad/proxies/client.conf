map $http_upgrade $conn_upgrade {
  default     "";
  "websocket" "Upgrade";
}

log_format logger-json escape=json
'{'
'"source": "client-proxy",'
'"time": "$time_iso8601",'
'"resp_body_size": $body_bytes_sent,'
'"host": "$http_host",'
'"address": "$remote_addr",'
'"request_length": $request_length,'
'"method": "$request_method",'
'"uri": "$request_uri",'
'"status": $status,'
'"user_agent": "$http_user_agent",'
'"resp_time": $request_time,'
'"upstream_addr": "$upstream_addr"'
'}';
access_log /var/log/nginx/access.log logger-json;

server {
  listen 3002 default_server;

  server_name _;
  return 502 "Cannot connect to sandbox";
}
[[ range service "session-proxy" ]]
server {
  listen 3002;
  access_log /var/log/nginx/access.log logger-json;

  server_name ~^(.+)-[[ index .ServiceMeta "Client" | sprig_substr 0 8 ]]\.${domain_name_escaped}$;

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;

  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $conn_upgrade;

  proxy_hide_header x-frame-options;

  proxy_http_version 1.1;

  client_body_timeout 86400s;
  client_header_timeout 10s;

  # proxy_read_timeout 600s;
  proxy_read_timeout 1d;
  proxy_send_timeout 86400s;

  proxy_cache_bypass 1;
  proxy_no_cache 1;

  client_max_body_size 1024m;

  proxy_buffering off;
  proxy_request_buffering off;

  tcp_nodelay on;
  tcp_nopush on;
  sendfile on;
  # send_timeout                600s;
  # proxy_connect_timeout       30s;

  keepalive_timeout 620s;
  keepalive_requests 8192;

  # gzip off;
  location / {
    proxy_pass $scheme://[[ .Address ]]:[[ .Port ]]$request_uri;
  }
}
[[ end ]]
server {
  listen 3001;
  location /health {
    access_log off;
    add_header 'Content-Type' 'application/json';
    return 200 '{"status":"UP"}';
  }

  location /status {
    access_log off;
    stub_status;
    allow all;
  }
}