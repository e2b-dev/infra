// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"time"
)

const (
	ApiKeyAuthScopes = "ApiKeyAuth.Scopes"
)

// Defines values for ClusterNodeStatus.
const (
	Draining  ClusterNodeStatus = "draining"
	Healthy   ClusterNodeStatus = "healthy"
	Unhealthy ClusterNodeStatus = "unhealthy"
)

// Defines values for ClusterNodeType.
const (
	ClusterNodeTypeEdge         ClusterNodeType = "edge"
	ClusterNodeTypeOrchestrator ClusterNodeType = "orchestrator"
)

// Defines values for ClusterOrchestratorRole.
const (
	ClusterOrchestratorRoleOrchestrator    ClusterOrchestratorRole = "orchestrator"
	ClusterOrchestratorRoleTemplateManager ClusterOrchestratorRole = "templateManager"
)

// ClusterNode defines model for ClusterNode.
type ClusterNode struct {
	// Commit Source code version of the node
	Commit string `json:"commit"`

	// Host Node private IPv4 address and service port
	Host string `json:"host"`

	// Id Service ID
	Id string `json:"id"`

	// NodeId Node ID
	NodeId string `json:"nodeId"`

	// StartedAt Time when the node was registered
	StartedAt time.Time `json:"startedAt"`

	// Status State of the cluster node
	Status ClusterNodeStatus `json:"status"`

	// Type Cluster node type
	Type ClusterNodeType `json:"type"`

	// Version Version of the node
	Version string `json:"version"`
}

// ClusterNodeInfo defines model for ClusterNodeInfo.
type ClusterNodeInfo struct {
	// Commit Version of the node
	Commit string `json:"commit"`

	// Id Service ID
	Id string `json:"id"`

	// NodeId Node ID
	NodeId string `json:"nodeId"`

	// Startup Time when the node started
	Startup time.Time `json:"startup"`

	// Status State of the cluster node
	Status ClusterNodeStatus `json:"status"`

	// Version Version of the node
	Version string `json:"version"`
}

// ClusterNodeStatus State of the cluster node
type ClusterNodeStatus string

// ClusterNodeType Cluster node type
type ClusterNodeType string

// ClusterOrchestratorNode defines model for ClusterOrchestratorNode.
type ClusterOrchestratorNode struct {
	// Commit Service Version
	Commit string `json:"commit"`

	// Id Service ID
	Id string `json:"id"`

	// MetricDiskMBUsed Amount of disk space currently used in MB
	MetricDiskMBUsed int64 `json:"metricDiskMBUsed"`

	// MetricRamMBUsed Amount of RAM currently used in MB
	MetricRamMBUsed int64 `json:"metricRamMBUsed"`

	// MetricSandboxesRunning Amount of disk space currently used in MB
	MetricSandboxesRunning int64 `json:"metricSandboxesRunning"`

	// MetricVCpuUsed Number of vCPUs currently in use
	MetricVCpuUsed int64 `json:"metricVCpuUsed"`

	// NodeId Node ID
	NodeId string                    `json:"nodeId"`
	Roles  []ClusterOrchestratorRole `json:"roles"`

	// StartedAt Time when the node was registered
	StartedAt time.Time `json:"startedAt"`

	// Status State of the cluster node
	Status ClusterNodeStatus `json:"status"`

	// Version Service Version
	Version string `json:"version"`
}

// ClusterOrchestratorRole Capability of the orchestrator
type ClusterOrchestratorRole string

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error
	Message string `json:"message"`
}

// RunningSandbox defines model for RunningSandbox.
type RunningSandbox struct {
	ClientId  *string        `json:"client_id,omitempty"`
	Config    *SandboxConfig `json:"config,omitempty"`
	EndEime   *Timestamp     `json:"endEime,omitempty"`
	StartTime *Timestamp     `json:"startTime,omitempty"`
}

// SandboxConfig defines model for SandboxConfig.
type SandboxConfig struct {
	Alias              *string            `json:"alias"`
	AutoPause          *bool              `json:"autoPause,omitempty"`
	BaseTemplateId     *string            `json:"baseTemplateId"`
	BuildId            string             `json:"buildId"`
	EnvVars            *map[string]string `json:"envVars,omitempty"`
	EnvdAccessToken    *string            `json:"envdAccessToken,omitempty"`
	EnvdVersion        string             `json:"envdVersion"`
	FirecrackerVersion string             `json:"firecrackerVersion"`
	HugePages          bool               `json:"hugePages"`
	KernelVersion      string             `json:"kernelVersion"`

	// MaxSandboxLength Maximum duration in hours
	MaxSandboxLength *int64             `json:"maxSandboxLength,omitempty"`
	Metadata         *map[string]string `json:"metadata,omitempty"`
	OrchestratorId   string             `json:"orchestratorId"`
	RamMB            int64              `json:"ramMB"`
	SandboxId        string             `json:"sandboxId"`
	Snapshot         bool               `json:"snapshot"`
	TeamId           string             `json:"teamId"`
	TemplateId       string             `json:"templateId"`
	TotalDiskSizeMB  *int64             `json:"totalDiskSizeMB,omitempty"`
	VCPU             int64              `json:"vCPU"`
}

// SandboxCreateRequest defines model for SandboxCreateRequest.
type SandboxCreateRequest struct {
	EndTime   Timestamp     `json:"endTime"`
	Sandbox   SandboxConfig `json:"sandbox"`
	StartTime Timestamp     `json:"startTime"`
}

// SandboxCreateResponse defines model for SandboxCreateResponse.
type SandboxCreateResponse struct {
	ClientId string `json:"clientId"`
}

// SandboxListResponse defines model for SandboxListResponse.
type SandboxListResponse struct {
	Sandboxes []RunningSandbox `json:"sandboxes"`
}

// SandboxPauseRequest defines model for SandboxPauseRequest.
type SandboxPauseRequest struct {
	BuildId    string `json:"buildId"`
	TemplateId string `json:"templateId"`
}

// SandboxUpdateRequest defines model for SandboxUpdateRequest.
type SandboxUpdateRequest struct {
	EndTime Timestamp `json:"endTime"`
}

// Timestamp defines model for Timestamp.
type Timestamp = time.Time

// SandboxId defines model for sandbox_id.
type SandboxId = string

// N400 defines model for 400.
type N400 = Error

// N401 defines model for 401.
type N401 = Error

// N404 defines model for 404.
type N404 = Error

// N500 defines model for 500.
type N500 = Error

// V1CreateSandboxJSONRequestBody defines body for V1CreateSandbox for application/json ContentType.
type V1CreateSandboxJSONRequestBody = SandboxCreateRequest

// V1UpdateSandboxJSONRequestBody defines body for V1UpdateSandbox for application/json ContentType.
type V1UpdateSandboxJSONRequestBody = SandboxUpdateRequest

// V1PauseSandboxJSONRequestBody defines body for V1PauseSandbox for application/json ContentType.
type V1PauseSandboxJSONRequestBody = SandboxPauseRequest
