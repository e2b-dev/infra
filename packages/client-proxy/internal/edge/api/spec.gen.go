// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//5NqAqM0OAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
