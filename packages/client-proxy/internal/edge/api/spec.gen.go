// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
