version: "2"

formatters:
  enable:
    - gci
    - gofumpt
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/e2b-dev/infra)

linters:
  default: all
  disable:
    # these are in other PRs already
    - forcetypeassert
    - protogetter

    # todo: determine if we want this
    - canonicalheader
    - cyclop
    - depguard
    - dupl
    - dupword
    - errcheck
    - errchkjson
    - exhaustive
    - exhaustruct
    - forbidigo  # enable this when we're committed to avoiding os.Getenv
    - funcorder
    - funlen
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocyclo
    - godot
    - godox
    - gomoddirectives
    - gomodguard
    - gosec
    - ireturn
    - lll
    - maintidx
    - mnd
    - nestif
    - nilnil
    - nlreturn
    - noinlineerr
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - perfsprint
    - prealloc
    - predeclared
    - tagliatelle
    - testpackage
    - unparam
    - varnamelen
    - wrapcheck

    # todo: enable these
    - err113

    # deprecated, remove when golangci-lint makes us
    - wsl
    - wsl_v5

    # disabled intentionally

  settings:
    # enable this when we're committed to avoiding os.Getenv
    #    forbidigo:
    #      forbid:
    #        - pattern: os\.Getenv
    #          msg: Add your field to the configuration model instead.

    gocritic:
      disabled-checks:
        - appendAssign
    revive:
      enable-all-rules: true
      rules:
        - { disabled: true, name: add-constant }  # todo: enable this
        - { disabled: true, name: argument-limit }
        - { disabled: true, name: bare-return }
        - { disabled: true, name: blank-imports }
        - { disabled: true, name: bool-literal-in-expr }
        - { disabled: true, name: cognitive-complexity }
        - { disabled: true, name: comment-spacings }
        - { disabled: true, name: confusing-naming }
        - { disabled: true, name: confusing-results }
        - { disabled: true, name: context-as-argument }
        - { disabled: true, name: cyclomatic }
        - { disabled: true, name: deep-exit }
        - { disabled: true, name: early-return }
        - { disabled: true, name: enforce-switch-style }
        - { disabled: true, name: exported }
        - { disabled: true, name: flag-parameter }   # todo: enable this
        - { disabled: true, name: function-length }
        - { disabled: true, name: function-result-limit }
        - { disabled: true, name: get-return }
        - { disabled: true, name: if-return }
        - { disabled: true, name: import-alias-naming }
        - { disabled: true, name: import-shadowing }
        - { disabled: true, name: line-length-limit }
        - { disabled: true, name: max-control-nesting }
        - { disabled: true, name: max-public-structs }
        - { disabled: true, name: nested-structs }
        - { disabled: true, name: package-comments }
        - { disabled: true, name: redefines-builtin-id }
        - { disabled: true, name: unchecked-type-assertion }
        - { disabled: true, name: unexported-naming }
        - { disabled: true, name: unexported-return }
        - { disabled: true, name: unhandled-error }  #  todo: enable this
        - { disabled: true, name: unnecessary-format }  # todo: enable this
        - { disabled: true, name: unnecessary-stmt }  # todo: enable this
        - { disabled: true, name: unused-parameter }  # todo: enable this
        - { disabled: true, name: unused-receiver }
        - { disabled: true, name: use-errors-new }  # todo: enable this
        - { disabled: true, name: useless-break }  # todo: enable this
        - { disabled: true, name: var-declaration }
        - { disabled: true, name: var-naming }

    staticcheck:
      checks:
        - all
        - -S1002  # Omit comparison with boolean constant
        - -SA1019  # TODO: Remove (Using a deprecated function, variable, constant or field)
        - -ST1000  # Incorrect or missing package comment
        - -ST1020  # The documentation of an exported function should start with the function’s name
        - -ST1021  # The documentation of an exported type should start with type’s name
        - -ST1003  # Poorly chosen identifier
        - -QF1008  # Omit embedded fields from selector expression

run:
  go: 1.24.7
