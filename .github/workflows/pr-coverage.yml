name: PR Coverage Report

on:
  pull_request:
    branches: [ main, master ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for analyzing changes

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.23.0'

      - name: Run tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: Get changed Go files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            **/*.go
          file_separator: ","

      - name: Process coverage for changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "# Coverage Report for Changed Files" > coverage_report.md
          echo "" >> coverage_report.md
          echo "| File | Coverage |" >> coverage_report.md
          echo "|------|----------|" >> coverage_report.md
          
          IFS=',' read -ra CHANGED_FILES <<< "${{ steps.changed-files.outputs.all_changed_files }}"
          TOTAL_COV=0
          COUNT=0
          
          for file in "${CHANGED_FILES[@]}"; do
            # Skip test files
            if [[ "$file" == *_test.go ]]; then
              continue
            fi
            
            # Get coverage for this file
            FILE_COV=$(go tool cover -func=coverage.out | grep "${file}" | awk '{print $3}')
            
            if [ ! -z "$FILE_COV" ]; then
              echo "| $file | $FILE_COV |" >> coverage_report.md
              # Extract numeric value without the % sign for calculation
              COV_NUM=$(echo $FILE_COV | sed 's/%//')
              TOTAL_COV=$(echo "$TOTAL_COV + $COV_NUM" | bc)
              COUNT=$((COUNT + 1))
            else
              echo "| $file | 0.0% |" >> coverage_report.md
            fi
          done
          
          if [ $COUNT -gt 0 ]; then
            AVG_COV=$(echo "scale=1; $TOTAL_COV / $COUNT" | bc)
            echo "" >> coverage_report.md
            echo "**Average coverage for changed files: ${AVG_COV}%**" >> coverage_report.md
          fi
          
          cat coverage_report.md

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: steps.changed-files.outputs.any_changed == 'true'
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Coverage Report for Changed Files

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-file: coverage_report.md
          edit-mode: replace 